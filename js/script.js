document.addEventListener("DOMContentLoaded", () => {
    const sendResultsBtn = document.getElementById("send-results-btn");
    window.resultEl = document.getElementById("result");
    const lastAttemptKey = getLastAttemptKey(); // ‚úÖ –û—Ç—Ä–∏–º—É—î–º–æ –∫–ª—é—á –¥–ª—è LocalStorage
    const lastAttempt = localStorage.getItem(lastAttemptKey); // ‚úÖ –û–≥–æ–ª–æ—à—É—î–º–æ lastAttempt
    const lastAttemptDate = lastAttempt ? new Date(lastAttempt) : null;


   





    window.getEntryIDs = function() {
        const currentPage = window.location.pathname;
        console.log("üîπ –í–∏–∑–Ω–∞—á–∞—î–º–æ entry ID –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏:", currentPage);
      
        if (currentPage.includes("upiznay_fihury.html")) {
          return {
            formURL: "https://docs.google.com/forms/d/e/1FAIpQLSfSJTHeQHKjxr-_Nfwr0qC1-5Rinq1xGevQ4i8yFKegE9Wfyw/formResponse",
            name: "entry.511676966",
            score: "entry.1332224844",
            level: "entry.1008291282"
          };
        }
      
        if (currentPage.includes("matrytsya_ravena.html")) {
          return {
            formURL: "https://docs.google.com/forms/u/0/d/e/1FAIpQLSfyylO6_4cpbzuD6THcT95VMAW5R7Foy1qykWDloI7Rew2b1g/formResponse",
            name: "entry.511676966",
            score: "entry.1008291282",
            level: "entry.1332224844"
          };
        }
      
        if (currentPage.includes("cognitive_skills/")) {
          return {
            formURL: "https://docs.google.com/forms/d/e/1FAIpQLSeco-wWwULNG0-L1Qwnxn4tYBtQxinBXjVg4jTB1C2HzZ2KNw/formResponse",
            name: "entry.511676966",
            score: "entry.1008291282",
            level: "entry.1332224844"
          };
        }
      
        return null;
      };
       
         




    console.log("üîπ –û—Å—Ç–∞–Ω–Ω—è —Å–ø—Ä–æ–±–∞:", lastAttemptDate);
    console.log("‚úÖ –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–æ–¥–∞–Ω–æ –¥–æ `send-results-btn`.");
    
    // ‚úÖ –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å –¥–ª—è –§—ñ–≥—É—Ä —Ç–∞ –ú–∞—Ç—Ä–∏—Ü—ñ –†–∞–≤–µ–Ω–∞
    function checkAllAnsweredGeneral() {
        const questions = document.querySelectorAll('input[type="radio"]');
        const totalQuestions = new Set();
        let answeredQuestions = new Set();

        questions.forEach((input) => totalQuestions.add(input.name));
        questions.forEach((input) => {
            if (input.checked) answeredQuestions.add(input.name);
        });

        return { totalQuestions, answeredQuestions };
    }









window.submitResults = function(finalScore, level, entryIDs, studentName) {
    if (window.isSubmitting) return;
    window.isSubmitting = true;

    console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—è submitResults –≤–∏–∫–ª–∏–∫–∞–Ω–∞!");
    
    if (!entryIDs || !entryIDs.formURL) {
        console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏.");
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞! –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID.");
        window.isSubmitting = false;
        return;
    }

    console.log("üîπ –û—Ç—Ä–∏–º–∞–Ω—ñ entry IDs:", entryIDs);

    const formData = new URLSearchParams();
    formData.append(entryIDs.name, studentName);
    formData.append(entryIDs.score, Number(finalScore));
    formData.append(entryIDs.level, String(level));

    console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", Object.fromEntries(formData));

    fetch(entryIDs.formURL, {
        method: "POST",
        mode: "no-cors", // –ó–∞–ø–æ–±—ñ–≥–∞—î CORS-–±–ª–æ–∫—É–≤–∞–Ω–Ω—é
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: formData
    })
    .then(() => {
        console.log("‚úÖ –£—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
        alert("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ —É Google Forms!");
        document.getElementById("send-results-btn").style.display = "none";
    })
    .catch(error => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", error);
        alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    })
    .finally(() => {
        window.isSubmitting = false;
    });
};//submitResults
sendResultsBtn.addEventListener("click", () => {
    console.log("‚úÖ –í–∏–∫–ª–∏–∫ submitResults");

    const currentPage = window.location.pathname;
    let totalQuestions, answeredQuestions;

    // ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Å—Ç—É —Ç–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
    let checkResults;
    if (currentPage.includes("cognitive_skills/")) {
        if (typeof checkAllAnsweredMotivation === "function") {
            checkResults = checkAllAnsweredMotivation();
        } else {
            console.error("‚ùå –§—É–Ω–∫—Ü—ñ—è checkAllAnsweredMotivation –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!");
            return;
        }
    } else {
        checkResults = checkAllAnsweredGeneral();
    }

    // ‚ùó –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–º–∏–ª—Ü—ñ, —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω—É–ª–∞ null –∞–±–æ undefined
    if (!checkResults || !checkResults.totalQuestions || !checkResults.answeredQuestions) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: `checkResults` –ø–æ–≤–µ—Ä–Ω—É–≤ `undefined` –∞–±–æ `null`.");return;
    }

    // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
    ({ totalQuestions, answeredQuestions } = checkResults);

    // ‚úÖ –Ø–∫—â–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è - –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å
    if (totalQuestions.size !== answeredQuestions.size) {
        alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è–º!");
        return;
    }

    // üè´üßíüìõ –ü—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è  
    const studentName = prompt("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:").trim();
    if (!studentName || studentName.length < 2) {
        alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —ñ–º'—è.");
        return;
    }

    // ‚úÖ –§—ñ–ª—å—Ç—Ä —Å–∏–º–≤–æ–ª—ñ–≤ —É —ñ–º–µ–Ω—ñ
    const cleanedStudentName = studentName.replace(/[^a-zA-Z–ê-–Ø–∞-—è–á—ó–Ü—ñ–Ñ—î“ê“ë0-9' ]/g, "");

    // üï∏üìÑ –í–∏–∑–Ω–∞—á–∞—î–º–æ, —è–∫–∏–π —Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω–æ
    let finalScore, level;

    if (currentPage.includes("matrytsya_ravena.html")) {
        finalScore = calculateScore();
        level = calculateLevelRaven(finalScore);
    } else if (currentPage.includes("upiznay_fihury.html")) {
        finalScore = window.finalScoreFigures;
        level = window.finalLevelFigures;
    } else if (currentPage.includes("cognitive_skills/")) {
        finalScore = calculateScoreMotivation();
        level = getLevel(finalScore);
    } else {
        console.error("‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞! –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ.");
        return;
    }

    console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", { name: cleanedStudentName, score: finalScore, level });

    // ‚úÖ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    submitResults(finalScore, level, getEntryIDs(), cleanedStudentName);
});//sendResultsBtn click

   // ‚úÖ –§—É–Ω–∫—Ü—ñ—ó –æ–±–º–µ–∂–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—É (–Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ)
   function getLastAttemptKey() {
    const currentPage = window.location.pathname;
    if (currentPage.includes("cognitive_skills/")) return "lastAttemptMotivation";
    if (currentPage.includes("matrytsya_ravena.html")) return "lastAttemptRaven";
    if (currentPage.includes("upiznay_fihury.html")) return "lastAttemptFigures";
    return "lastAttemptDefault";
}

function isAllowedToRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return daysPassed >= 21; // –ß–µ—Ä–µ–∑ 3 —Ç–∏–∂–Ω—ñ
}

function daysUntilRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return Math.ceil(21 - daysPassed);
}








    if (lastAttempt && !isAllowedToRetry(new Date(lastAttempt))) {
        resultEl.innerHTML = `‚ùå –í–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç. –ú–æ–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${daysUntilRetry(new Date(lastAttempt))} –¥–Ω—ñ–≤.`;
        sendResultsBtn.disabled = true;
        return;
    }

});
