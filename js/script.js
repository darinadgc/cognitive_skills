document.addEventListener("DOMContentLoaded", () => {
    window.resultElMotivation = document.getElementById("result-motivation");
    window.resultElFigures = document.getElementById("result-figures");
    window.resultElRaven = document.getElementById("result-raven");
    // const lastAttemptKey = getLastAttemptKey(); // ‚úÖ –û—Ç—Ä–∏–º—É—î–º–æ –∫–ª—é—á –¥–ª—è LocalStorage
    // const lastAttempt = localStorage.getItem(lastAttemptKey); // ‚úÖ –û–≥–æ–ª–æ—à—É—î–º–æ lastAttempt
    // const lastAttemptDate = lastAttempt ? new Date(lastAttempt) : null;
document.getElementById("send-results-motivation-btn").addEventListener("click", () => submitTestResults("motivation"));
    document.getElementById("send-results-figures-btn").addEventListener("click", () => submitTestResults("figures"));
    document.getElementById("send-results-raven-btn").addEventListener("click", () => submitTestResults("raven"));
  const startBtnFigures = document.getElementById("start-btn-figures");
  const startBtnRaven = document.getElementById("start-btn-raven");
 let timerIntervalFigures;
  let score;
  let timerIntervalRaven;

// ACCORDION
let acc = document.getElementsByClassName("accordion");
	
let i; 
	for (i = 0; i < acc.length; i++) {
	  acc[i].addEventListener("click", function() {
	    this.classList.toggle("active");
	    let panel = this.nextElementSibling;
	    if (panel.style.maxHeight){
	      panel.style.maxHeight = null;
	    } else {
	      panel.style.maxHeight = panel.scrollHeight + "1px";
	    }; 
	  });
	};   
//üíóüíóüíóüíóüíóüíóüíóüíó
window.checkAllAnsweredMotivation = function() {
    const questions = document.querySelectorAll('input[type="radio"]');
    const totalQuestions = new Set();
    const answeredQuestions = new Set();
    let score = 0; // –ó–∞–≥–∞–ª—å–Ω–∏–π –±–∞–ª

    // ‚úÖ –î–æ–¥–∞—î–º–æ –ø–∏—Ç–∞–Ω–Ω—è –∑–∞ `name`, –∞ –Ω–µ –∑–∞ `value`
    questions.forEach((input) => totalQuestions.add(input.name));

    questions.forEach((input) => {
        if (input.checked) {
            answeredQuestions.add(input.name);
            score += parseInt(input.value) || 0; // –î–æ–¥–∞—î–º–æ –±–∞–ª
        }
    });

    console.log("üîπ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∏—Ç–∞–Ω—å:", totalQuestions.size);
    console.log("üîπ –í—ñ–¥–ø–æ–≤—ñ–¥—ñ:", answeredQuestions.size);
    console.log("üîπ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", score);

    return { totalQuestions, answeredQuestions, score };
};
window.calculateScoreMotivation = function() {
    let checkedAnswers = document.querySelectorAll('input[type="radio"]:checked'); // ‚úÖ –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    let score = 0; // –ó–∞–≥–∞–ª—å–Ω–∏–π –±–∞–ª

        checkedAnswers.forEach((input) => {
        score += parseInt(input.value) || 0; // ‚úÖ –î–æ–¥–∞—î–º–æ –±–∞–ª–∏
    });

    console.log("üîπ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", score); // ‚úÖ –ü–µ—Ä–µ–Ω–æ—Å–∏–º–æ –¥–æ return
    return score;
}
window.getLevelMotivation = function(score) {
    if (score > 13) return "–í–∏—Å–æ–∫–∏–π";
    if (score > 7) return "–°–µ—Ä–µ–¥–Ω—ñ–π";
    return "–ù–∏–∑—å–∫–∏–π";
};
//ü§îü§îü§îü§îü§îü§îü§îü§îü§îü§îü§îü§î
 
 const taskContainerRaven = document.getElementById("task-container-raven");
  const timerElRaven = document.getElementById("timer-raven");
  

  const tasksRaven = [
    { image: "img/matrytsya_ravena/matrytsya_ravena1.jpg", correct: 7 },
    { image: "img/matrytsya_ravena/matrytsya_ravena2.jpg", correct: 6 },
    { image: "img/matrytsya_ravena/matrytsya_ravena3.jpg", correct: 6 },
    { image: "img/matrytsya_ravena/matrytsya_ravena4.jpg", correct: 1 },
    { image: "img/matrytsya_ravena/matrytsya_ravena5.jpg", correct: 2 },
    { image: "img/matrytsya_ravena/matrytsya_ravena6.jpg", correct: 5 },
    { image: "img/matrytsya_ravena/matrytsya_ravena7.jpg", correct: 6 },
    { image: "img/matrytsya_ravena/matrytsya_ravena8.jpg", correct: 1 },
    { image: "img/matrytsya_ravena/matrytsya_ravena9.jpg", correct: 3 },
    { image: "img/matrytsya_ravena/matrytsya_ravena10.jpg", correct: 5 }
  ];

  // ‚úÖ –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –ü–Ü–°–õ–Ø –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó
  startBtnRaven.addEventListener("click", startTestRaven);

  function startTestRaven() {
    console.log("üîπ startTest() –∑–∞–ø—É—â–µ–Ω–æ!");
    currentTaskIndex = 0;
    score = 0;
    taskContainerRaven.style.display = "flex";
    startBtnRaven.style.display = "none";
    sendResultsBtnRaven.style.display = "none";
    startTimer(600);
    loadTask();
  }

  function startTimerRaven(duration) {
    let timeLeft = duration;

    timerIntervalRaven = setInterval(() => {
      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;
      timerEl.textContent = `‚è≥ ${minutes}:${seconds < 10 ? "0" : ""}${seconds}`;
      timeLeft--;

      if (timeLeft < 0) {
        clearInterval(timerInterval);
        finishTest();
      }
    }, 1000);
  }

  function loadTaskRaven() {
let currentTaskIndex = 0;
    const taskRaven = tasksRaven[currentTaskIndex];

    taskContainer.innerHTML = `
      <img src="${task.image}" class="main-image">
      <div class="next-div">
        <button id="next-btn">–î–∞–ª—ñ</button>
        <ol class="radio-options">
          ${[1, 2, 3, 4, 5, 6, 7, 8].map(num => `
            <li>
              <input type="radio" name="task" id="option-${num}" value="${num}">
              <label for="option-${num}">${num}</label>
            </li>
          `).join('')}
        </ol>
      </div>
    `;

    document.getElementById("next-btn").addEventListener("click", checkAnswerRaven);
  }
//‚úÖ checkAnswer
  function checkAnswerRaven() {
    const selectedOption = document.querySelector('input[name="task"]:checked');
    if (!selectedOption) {
      alert("–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è.");
      return;
    }

    const userAnswerRaven = parseInt(selectedOption.value);
    if (userAnswerRaven === tasks[currentTaskIndexRaven].correct) {
      score++;
    }

    currentTaskIndexRaven++;
    if (currentTaskIndexRaven < tasks.length) {
      loadTask();
    } else {
      finishTest();
    }
  }//‚úÖ checkAnswer
window.calculateLevelRaven = function () {
    let score = 0;
       const answers = document.querySelectorAll('.radio-options input[type="radio"]:checked');
 answers.forEach((input) => {
        if (input.value === "1") score++; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –º–∞—é—Ç—å value="1"
    });

    console.log("‚úÖ –ü—ñ–¥—Ä–∞—Ö–æ–≤–∞–Ω–∏–π –±–∞–ª:", score);
    return score;
};

 //üèÅfinishTest
  function finishTestRaven() {
    clearInterval(timerInterval);
    window.resultElRaven.innerHTML = "üõë –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç'.";
    taskContainer.innerHTML = "";
    sendResultsBtnRaven.style.display = "block";
  }//üèÅfinishTest 

    //üü©üü©üü©üü©üü©üü©üü©üü©üü©üü©üü©üü©üü©üü©üü©
    const figureTaskEl = document.getElementById("figure-task");
  const timerElFigures = document.getElementById("timer-figures");
 const tasksFigures = [
    { id: 1, image: "img/upiznay_fihury/upiznay_fihury1.png", correct: 2 },
    { id: 2, image: "img/upiznay_fihury/upiznay_fihury2.png", correct: 3 },
    { id: 3, image: "img/upiznay_fihury/upiznay_fihury3.png", correct: 1 },
    { id: 4, image: "img/upiznay_fihury/upiznay_fihury4.png", correct: 2 },
    { id: 5, image: "img/upiznay_fihury/upiznay_fihury5.png", correct: 4 },
    { id: 6, image: "img/upiznay_fihury/upiznay_fihury6.png", correct: 3 },
    { id: 7, image: "img/upiznay_fihury/upiznay_fihury7.png", correct: 1 },
    { id: 8, image: "img/upiznay_fihury/upiznay_fihury8.png", correct: 4 },
    { id: 9, image: "img/upiznay_fihury/upiznay_fihury9.png", correct: 3 },
    { id: 10, image: "img/upiznay_fihury/upiznay_fihury10.png", correct: 2 }
  ];

  let unansweredTasks = [...tasksFigures]; 
  let incorrectAnswers = []; 
  let currentTask = null;
 
  startBtnFigures.addEventListener("click", startTestFigures);

  function startTestFigures() {
    unansweredTasksFigures = [...tasksFigures];
    incorrectAnswers = [];
    score = 0;
    startBtnFigures.style.display = "none";
    sendResultsBtnFigures.style.display = "none";
    document.getElementById("figure-task").style.display = "block";

    startTimer(90);
    generateTask();
  }

  function startTimerFigures(duration) {
    let timeLeft = duration;

    timerIntervalFigures = setInterval(() => {
      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;
      timerEl.textContent = `‚è≥ ${minutes}:${seconds < 10 ? "0" : ""}${seconds}`;
      timeLeft--;

      if (timeLeft < 0) {
        clearInterval(timerInterval);
        finishTest();
      }
    }, 1000);
  }

  function generateTask() {
    if (score === 10 && incorrectAnswers.length === 0) {
      finishTest();
      return;
    }

    currentTask = unansweredTasks.length > 0
      ? unansweredTasks.shift()
      : incorrectAnswers.shift(); 

    figureTaskEl.innerHTML = `
      <img src="${currentTask.image}" class="main-image">
      <div class="options">
        ${[1, 2, 3, 4].map(num => `
          <img class="option" src="img/upiznay_fihury/upiznay_fihury${currentTask.id}_${num}.png" data-index="${num}">
        `).join("")}
      </div>
    `;

    document.querySelectorAll(".option").forEach(option => {
      option.addEventListener("click", () => checkAnswer(Number(option.dataset.index)));
    });
  }

  function checkAnswerFigures(selectedIndex) {
    if (selectedIndex === currentTask.correct) {
      score++;
      incorrectAnswers = incorrectAnswers.filter(task => task.id !== currentTask.id);
    } else {
      if (!incorrectAnswers.some(task => task.id === currentTask.id)) {
        incorrectAnswers.push(currentTask);
      }
    }
    setTimeout(generateTask, 1);
  }
window.calculateScoreFigures = function(timeTaken) {
    if (timeTaken < 45) return 10;
    if (timeTaken <= 47) return 9;
    if (timeTaken <= 49) return 8;
    if (timeTaken <= 52) return 7;
    if (timeTaken <= 59) return 6;
    if (timeTaken <= 62) return 5;
    if (timeTaken <= 69) return 4;
    if (timeTaken <= 72) return 3;
    if (timeTaken <= 79) return 2;
    if (timeTaken <= 82) return 1;
    return 0;
};

//üèÅfinishTest
  function finishTestFigures() {
    clearInterval(timerInterval);
    resultElFigures.innerHTML = "üõë –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç'.";
    figureTaskEl.innerHTML = "";
    sendResultsBtnFigures.style.display = "block";
  }//üèÅfinishTest

  
window.getEntryIDs = function (testType) {
    console.log("üîπ –í–∏–∑–Ω–∞—á–∞—î–º–æ entry ID –¥–ª—è —Ç–µ—Å—Ç—É:", testType);

    const entryIDs = {
        "motivation": {
            formURL: "https://docs.google.com/forms/d/e/1FAIpQLSeco-wWwULNG0-L1Qwnxn4tYBtQxinBXjVg4jTB1C2HzZ2KNw/formResponse",
            name: "entry.511676966",
            score: "entry.1008291282",
            level: "entry.1332224844"
        },
        "figures": {
            formURL: "https://docs.google.com/forms/d/e/1FAIpQLSfSJTHeQHKjxr-_Nfwr0qC1-5Rinq1xGevQ4i8yFKegE9Wfyw/formResponse",
            name: "entry.511676966",
            score: "entry.1332224844",
            level: "entry.1008291282"
        },
        "raven": {
            formURL: "https://docs.google.com/forms/u/0/d/e/1FAIpQLSfyylO6_4cpbzuD6THcT95VMAW5R7Foy1qykWDloI7Rew2b1g/formResponse",
            name: "entry.511676966",
            score: "entry.1008291282",
            level: "entry.1332224844"
        }
    };

    return entryIDs[testType] || null;
};
function submitTestResults(testType) {
    console.log(`‚úÖ –í–∏–∫–ª–∏–∫ submitResults –¥–ª—è ${testType}`);

    
    let sendStudentName = askStudentName();
    if (!sendStudentName) {
        console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
        return;
    }
    console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);

    if (testType === "figures") {
        let finalScore = calculateScoreFigures();
        let level = calculateLevelFigures(finalScore);
    } else if (testType === "raven") {
        let finalScore = calculateScoreRaven();
        let level = calculateLevelRaven(finalScore);
    } else  if (testType === "motivation") {
        let finalScore = calculateScoreMotivation();
        let level = getLevel(finalScore);



// else if (currentPage.includes("cognitive_skills/")) {
                        
// console.log("‚úÖ –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ...");
                    // ‚úÖ –Ø–∫—â–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è - –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å
    /* if (totalQuestions.size !== answeredQuestions.size) {
        alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è–º!");
        return;
    } */let checkResults = checkAllAnsweredMotivation();
 let totalQuestions, answeredQuestions;
if (checkResults.answeredQuestions.size == 10) {
    console.log("üîπ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∏—Ç–∞–Ω—å:", checkResults.totalQuestions.size);
    console.log("üîπ –í—ñ–¥–ø–æ–≤—ñ–¥—ñ:", checkResults.answeredQuestions.size);        // –í–∏–∫–æ–Ω—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
 // ‚úÖ –ó–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫–æ–º –±–∞–ª—ñ–≤
let sendStudentName = askStudentName();
if (!sendStudentName) {
    console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
    return;
}


 if (!checkResults || !checkResults.totalQuestions || !checkResults.answeredQuestions) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: `checkResults` –ø–æ–≤–µ—Ä–Ω—É–≤ `undefined` –∞–±–æ `null`.");return;
    }
    // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏({ totalQuestions, answeredQuestions } = checkResults);
    const { totalQuestions, answeredQuestions, score } = checkAllAnsweredMotivation();
if (typeof checkAllAnsweredMotivation === "function") {
                    checkResults = checkAllAnsweredMotivation();
                } else {
                    console.error("‚ùå –§—É–Ω–∫—Ü—ñ—è checkAllAnsweredMotivation –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!");
                    return;
                }
             console.log("‚úÖ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", finalScore);
             console.log("‚úÖ –í–∏–∑–Ω–∞—á–µ–Ω–∏–π —Ä—ñ–≤–µ–Ω—å:", level);
                // –í–∏–∫–ª–∏–∫–∞—î–º–æ submitResults –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
              if (!sendStudentName) {
    console.error("‚ùå sendStudentName –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
    return;
}
console.log("‚úÖ sendStudentName —ñ—Å–Ω—É—î:", sendStudentName);
     console.log("üöÄ –ì–æ—Ç—É—î–º–æ—Å—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏ submitResults...");
console.log("üìù –î–∞–Ω–Ω—ñ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", {
    finalScore,
    level,
    studentName: sendStudentName
});
   if (typeof finalScore === "undefined" || typeof level === "undefined") {
    console.error("‚ùå finalScore –∞–±–æ level –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
    return;
}

 submitResults(finalScore, level, getEntryIDs(), sendStudentName);
                }// if checkResults.answeredQuestions.size == 10
                else  if (checkResults.answeredQuestions.size < 10){
                    alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è–º!");
                    return;
                }        
    } // cognitive_skills
else {
        console.error("‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞! –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ.");
        return;
    }












     }    
    // else{
    //     console.error("‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–µ—Å—Ç! –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ.");
    //     return;
    // }

    // console.log("üîπ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", finalScore);
    // console.log("üîπ –í–∏–∑–Ω–∞—á–µ–Ω–∏–π —Ä—ñ–≤–µ–Ω—å:", level);

    // –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ entryIDs
    let entryIDs = getEntryIDs(testType);
    if (!entryIDs) {
        console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ç–µ—Å—Ç—É:", testType);
        return;
    }

    // –í–∏–∫–ª–∏–∫–∞—î–º–æ `submitResults()`
    submitResults(finalScore, level, entryIDs, sendStudentName);
// } `submitResults()`
       // ‚úÖ –ü–µ—Ä–µ–ø–∏—Å—É—î–º–æ submitResults() —Ç–∞ –π–æ–≥–æ –≤–∏–∫–ª–∏–∫
 window.submitResults = function(finalScore, level, entryIDs, sendStudentName) {
    console.log("üì® submitResults() –∑–∞–ø—É—â–µ–Ω–æ!");

    if (!entryIDs || !entryIDs.formURL) {
        console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏.");
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞! –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID.");
        return;
    }

    console.log("üîπ –û—Ç—Ä–∏–º–∞–Ω—ñ entry IDs:", entryIDs);

    const formData = new URLSearchParams();
    formData.append(entryIDs.name, sendStudentName);
    formData.append(entryIDs.score, Number(finalScore));
    formData.append(entryIDs.level, String(level));

    console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", Object.fromEntries(formData));
    console.log("üì© –§–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", formData.toString());

    fetch(entryIDs.formURL, {
        method: "POST",
        mode: "no-cors",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: formData
    })
    .then(() => {
        console.log("‚úÖ –£—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
        alert("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ —É Google Forms!");
    })
    .catch(error => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", error);
        alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    });
};
        




    console.log("üîπ –û—Å—Ç–∞–Ω–Ω—è —Å–ø—Ä–æ–±–∞:", lastAttemptDate);
    console.log("‚úÖ –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–æ–¥–∞–Ω–æ –¥–æ `send-results-btn`.");
    










// window.submitResults = function(finalScore, level, entryIDs, sendStudentName) {console.log("üì® submitResults() –∑–∞–ø—É—â–µ–Ω–æ!");

//     if (window.isSubmitting) return;
//     window.isSubmitting = true;

//     console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—è submitResults –≤–∏–∫–ª–∏–∫–∞–Ω–∞!");
    
//     if (!entryIDs || !entryIDs.formURL) {
//         console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏.");
//         alert("‚ùå –ü–æ–º–∏–ª–∫–∞! –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID.");
//         window.isSubmitting = false;
//         return;
//     }

//     console.log("üîπ –û—Ç—Ä–∏–º–∞–Ω—ñ entry IDs:", entryIDs);

//     const formData = new URLSearchParams();
//     formData.append(entryIDs.name, sendStudentName);
//     formData.append(entryIDs.score, Number(finalScore));
//     formData.append(entryIDs.level, String(level));
// console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", Object.fromEntries(formData));
//     console.log("üì© –§–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", formData.toString());

// fetch(entryIDs.formURL, {
//     method: "POST",
//     headers: { "Content-Type": "application/x-www-form-urlencoded" },
//     body: formData
// })
// .then(response => response.text()) // ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å Google Forms
// .then(text => console.log("üîπ –í—ñ–¥–ø–æ–≤—ñ–¥—å Google Forms:", text)) // üîé –î—Ä—É–∫—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
// .catch(error => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", error));

//     fetch(entryIDs.formURL, {
//         method: "POST",
//         mode: "no-cors", // –ó–∞–ø–æ–±—ñ–≥–∞—î CORS-–±–ª–æ–∫—É–≤–∞–Ω–Ω—é
//         headers: { "Content-Type": "application/x-www-form-urlencoded" },
//         body: formData
//     })
//     .then(() => {
//         console.log("‚úÖ –£—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
//         alert("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ —É Google Forms!");
//         document.getElementById("send-results-btn").style.display = "none";
//     })
//     .catch(error => {
//         console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", error);
//         alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
//     })
//     .finally(() => {
//         window.isSubmitting = false;
//     });
// };//‚úÖ –í–∏–∫–ª–∏–∫ submitResults
// üè´üßíüìõ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Ç—É —ñ–º–µ–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç–∞
window.askStudentName = function () {
    let studentName = prompt("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:").trim();

    if (!studentName || studentName.length < 2) {
        alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —ñ–º'—è.");
        return null;  // ‚ùå –Ø–∫—â–æ —ñ–º'—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ null
    }

    // ‚úÖ –§—ñ–ª—å—Ç—Ä —Å–∏–º–≤–æ–ª—ñ–≤ —É —ñ–º–µ–Ω—ñ
    let cleanedStudentName = studentName.replace(/[^a-zA-Z–ê-–Ø–∞-—è–á—ó–Ü—ñ–Ñ—î“ê“ë0-9' ]/g, "");

    return cleanedStudentName;  // ‚úÖ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—á–∏—â–µ–Ω–µ —ñ–º'—è
};// üè´üßíüìõ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Ç—É —ñ–º–µ–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç–∞

// sendResultsBtn.addEventListener("click", () => {
//     console.log("–í–∏–∫–ª–∏–∫ submitResults");
//     const currentPage = window.location.pathname;
//    let finalScore;
// let level;  // üîπ –¢–µ–ø–µ—Ä `level` –¥–æ—Å—Ç—É–ø–Ω–∏–π –≥–ª–æ–±–∞–ª—å–Ω–æ —É —Ñ—É–Ω–∫—Ü—ñ—ó!
// let sendStudentName; // üîπ –©–æ–± –Ω–µ –æ–≥–æ–ª–æ—à—É–≤–∞—Ç–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ `if`
//     window.calculateLevel = function(score) {
//     if (score === 10) return "–î—É–∂–µ –≤–∏—Å–æ–∫–∏–π";
//     if (score >= 8) return "–í–∏—Å–æ–∫–∏–π";
//     if (score >= 4) return "–°–µ—Ä–µ–¥–Ω—ñ–π";
//     if (score >= 2) return "–ù–∏–∑—å–∫–∏–π";
//     return "–î—É–∂–µ –Ω–∏–∑—å–∫–∏–π";
// };

    // üï∏üìÑ –í–∏–∑–Ω–∞—á–∞—î–º–æ, —è–∫–∏–π —Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω–æ
//     if (currentPage.includes("matrytsya_ravena.html")) {


//          // ‚úÖ –ó–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫–æ–º –±–∞–ª—ñ–≤
//   let sendStudentName = askStudentName();
// if (!sendStudentName) {
//     console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
//     return;
// }
// console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);
//  console.log("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ calculateLevel:", typeof calculateLevel);
// // let finalScore = calculateLevelRaven(score);
// //         let level = calculateLevelRaven(finalScore);
//         finalScore = calculateLevelRaven ();// —Ñ—É–Ω–∫—Ü—ñ—è calculateLevelRaven —Å–∞–º–∞ –æ–±—á–∏—Å–ª—é—î score –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Å–µ–±–µ
//         level = calculateLevel(finalScore);
// if (typeof finalScore === "undefined" || typeof level === "undefined") {
//     console.error("‚ùå finalScore –∞–±–æ level –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
//     return;
// }    
//     submitResults(finalScore, level, getEntryIDs(), sendStudentName);// ‚úÖ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
// console.log("üîπ –ü–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", {
//     studentName: sendStudentName,
//     score: score, // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç—É—Ç —î —á–∏—Å–ª–æ
//     level: level, // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ —î —Ä—ñ–≤–µ–Ω—å
// });//console.log
//     } 
// else if (currentPage.includes("upiznay_fihury.html")) {
//  // ‚úÖ –ó–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫–æ–º –±–∞–ª—ñ–≤
//  let sendStudentName = askStudentName();
// if (!sendStudentName) {
//     console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
//     return;
// }console.log(window.finalScore);
// console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);
// // console.log("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ calculateLevelFigures:", typeof window.calculateLevelFigures);
// // if (typeof window.calculateLevelFigures === "function") {
// //     let level = window.calculateLevelFigures(finalScore);
// // } else {
// //     console.error("‚ùå –§—É–Ω–∫—Ü—ñ—è calculateLevelFigures –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!");
// // }
//         let finalScore = calculateScoreFigures();


// if (typeof finalScore === "undefined") {
//     console.error("‚ùå finalScore –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
//     return;
// }

//         let level = calculateLevel(finalScore);
//     console.log("‚úÖ –ü—ñ–¥—Ä–∞—Ö–æ–≤–∞–Ω–∏–π —Ä—ñ–≤–µ–Ω—å:", level);
// if (typeof finalScore === "undefined" || typeof level === "undefined") {
//     console.error("‚ùå finalScore –∞–±–æ level –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
//     return;
// }
//     // ‚úÖ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
//     submitResults(finalScore, level, getEntryIDs(), sendStudentName);
// console.log("üîπ –ü–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", {
//     studentName: sendStudentName,
//     score: score, // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç—É—Ç —î —á–∏—Å–ª–æ
//     level: level, // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ —î —Ä—ñ–≤–µ–Ω—å
// });//console.log
//     } // upiznay_fihury
// else if (currentPage.includes("cognitive_skills/")) {
                        
// console.log("‚úÖ –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ...");
//                     // ‚úÖ –Ø–∫—â–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è - –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å
//     /* if (totalQuestions.size !== answeredQuestions.size) {
//         alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è–º!");
//         return;
//     } */let checkResults = checkAllAnsweredMotivation();
//  let totalQuestions, answeredQuestions;
// if (checkResults.answeredQuestions.size == 10) {
//     console.log("üîπ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∏—Ç–∞–Ω—å:", checkResults.totalQuestions.size);
//     console.log("üîπ –í—ñ–¥–ø–æ–≤—ñ–¥—ñ:", checkResults.answeredQuestions.size);        // –í–∏–∫–æ–Ω—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
//  // ‚úÖ –ó–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫–æ–º –±–∞–ª—ñ–≤
// let sendStudentName = askStudentName();
// if (!sendStudentName) {
//     console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
//     return;
// }
//                     let finalScore = calculateScoreMotivation();
//                let  level = getLevel(finalScore);

//  if (!checkResults || !checkResults.totalQuestions || !checkResults.answeredQuestions) {
//         console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: `checkResults` –ø–æ–≤–µ—Ä–Ω—É–≤ `undefined` –∞–±–æ `null`.");return;
//     }
//     // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏({ totalQuestions, answeredQuestions } = checkResults);
//     const { totalQuestions, answeredQuestions, score } = checkAllAnsweredMotivation();


//         // const finalScore = window.calculateScore();console.log("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ calculateScore:", typeof calculateScore);‚úÖ –¢—ñ–ª—å–∫–∏ —Ç–µ–ø–µ—Ä –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ –±–∞–ª–∏

// console.log("üîπ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", finalScore); // –î–æ–¥–∞–Ω–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
//          // ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Å—Ç—É —Ç–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
// console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);
// console.log("‚úÖ –ü–ï–†–ï–í–Ü–†–ö–ê: level =", level);
//     // if (currentPage.includes("cognitive_skills/")) {} 
//     // ‚ùó –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–º–∏–ª—Ü—ñ, —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω—É–ª–∞ null –∞–±–æ undefined
//    console.log("üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ totalQuestions —Ç–∞ answeredQuestions", totalQuestions, answeredQuestions);
// console.log("‚úÖ –ö–æ–¥ –¥–æ—Ö–æ–¥–∏—Ç—å —Å—é–¥–∏! –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ...");

//                 console.log("‚úÖ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", { name: sendStudentName, score: finalScore, level });

        
//                 if (typeof checkAllAnsweredMotivation === "function") {
//                     checkResults = checkAllAnsweredMotivation();
//                 } else {
//                     console.error("‚ùå –§—É–Ω–∫—Ü—ñ—è checkAllAnsweredMotivation –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!");
//                     return;
//                 }
//              console.log("‚úÖ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", finalScore);
//              console.log("‚úÖ –í–∏–∑–Ω–∞—á–µ–Ω–∏–π —Ä—ñ–≤–µ–Ω—å:", level);
//                 // –í–∏–∫–ª–∏–∫–∞—î–º–æ submitResults –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
//               if (!sendStudentName) {
//     console.error("‚ùå sendStudentName –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
//     return;
// }
// console.log("‚úÖ sendStudentName —ñ—Å–Ω—É—î:", sendStudentName);
//      console.log("üöÄ –ì–æ—Ç—É—î–º–æ—Å—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏ submitResults...");
// console.log("üìù –î–∞–Ω–Ω—ñ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", {
//     finalScore,
//     level,
//     studentName: sendStudentName
// });
//    if (typeof finalScore === "undefined" || typeof level === "undefined") {
//     console.error("‚ùå finalScore –∞–±–æ level –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
//     return;
// }

//  submitResults(finalScore, level, getEntryIDs(), sendStudentName);
//                 }// if checkResults.answeredQuestions.size == 10
//                 else  if (checkResults.answeredQuestions.size < 10){
//                     alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è–º!");
//                     return;
//                 }        
//     } // cognitive_skills
// else {
//         console.error("‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞! –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ.");
//         return;
//     }
// const level = getLevel(score);
    // console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", { score, level });
// console.log("‚úÖ –ü–ï–†–ï–í–Ü–†–ö–ê: level =", level);
// if (typeof finalScore === "undefined" || typeof level === "undefined") {
    // console.error("‚ùå finalScore –∞–±–æ level –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
    // return;
// }

// });//sendResultsBtn click                

   // ‚úÖ –§—É–Ω–∫—Ü—ñ—ó –æ–±–º–µ–∂–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—É (–Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ)

// ‚úÖ –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–±–º–µ–∂–µ–Ω—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç—É
// function checkTestRetry(testType, resultElement) {
//     const lastAttemptKey = `lastAttempt${testType}`;
//     const lastAttempt = localStorage.getItem(lastAttemptKey);
//     const lastAttemptDate = lastAttempt ? new Date(lastAttempt) : null;

//     if (lastAttemptDate && !isAllowedToRetry(lastAttemptDate)) {
	

//         resultElement.innerHTML = `‚ùå –í–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç. –ú–æ–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${daysUntilRetry(lastAttemptDate)} –¥–Ω—ñ–≤.`;
//         return false;
//     }

//     resultElement.innerHTML = "‚úÖ –í–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç!";
//     return true;
// }

// ‚úÖ –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–µ—Å—Ç—ñ–≤
// document.addEventListener("DOMContentLoaded", () => {
//     document.getElementById("figures-title").addEventListener("click", () => {
//         checkTestRetry("Figures", document.getElementById("resultElFigures"));
//     });

//     document.getElementById("raven-title").addEventListener("click", () => {
//         checkTestRetry("Raven", document.getElementById("resultElRaven"));
//     });

//     document.getElementById("motivation-title").addEventListener("click", () => {
//         checkTestRetry("Motivation", document.getElementById("resultElMotivation"));
//     });
// });







//    function getLastAttemptKey() {
//     const currentPage = window.location.pathname;
//     if (currentPage.includes("cognitive_skills/")) return "lastAttemptMotivation";
//     if (currentPage.includes("matrytsya_ravena.html")) return "lastAttemptRaven";
//     if (currentPage.includes("upiznay_fihury.html")) return "lastAttemptFigures";
//     return "lastAttemptDefault";
// }

function isAllowedToRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return daysPassed >= 21; // –ß–µ—Ä–µ–∑ 3 —Ç–∏–∂–Ω—ñ
}

function daysUntilRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return Math.ceil(21 - daysPassed);
}








    // if (lastAttempt && !isAllowedToRetry(new Date(lastAttempt))) {
    //     resultEl.innerHTML = `‚ùå –í–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç. –ú–æ–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${daysUntilRetry(new Date(lastAttempt))} –¥–Ω—ñ–≤.`;
    //     sendResultsBtn.disabled = true;
    //     return;
    // }

});
