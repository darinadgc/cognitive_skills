document.addEventListener("DOMContentLoaded", () => {
    window.sendResultsBtn = document.getElementById("send-results-btn");
    window.resultEl = document.getElementById("result");
    const lastAttemptKey = getLastAttemptKey(); // ‚úÖ –û—Ç—Ä–∏–º—É—î–º–æ –∫–ª—é—á –¥–ª—è LocalStorage
    const lastAttempt = localStorage.getItem(lastAttemptKey); // ‚úÖ –û–≥–æ–ª–æ—à—É—î–º–æ lastAttempt
    const lastAttemptDate = lastAttempt ? new Date(lastAttempt) : null;


   





    window.getEntryIDs = function() {
        const currentPage = window.location.pathname;
        console.log("üîπ –í–∏–∑–Ω–∞—á–∞—î–º–æ entry ID –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏:", currentPage);
      
        if (currentPage.includes("upiznay_fihury.html")) {
          return {
            formURL: "https://docs.google.com/forms/d/e/1FAIpQLSfSJTHeQHKjxr-_Nfwr0qC1-5Rinq1xGevQ4i8yFKegE9Wfyw/formResponse",
            name: "entry.511676966",
            score: "entry.1332224844",
            level: "entry.1008291282"
          };
        }
      
        if (currentPage.includes("matrytsya_ravena.html")) {
          return {
            formURL: "https://docs.google.com/forms/u/0/d/e/1FAIpQLSfyylO6_4cpbzuD6THcT95VMAW5R7Foy1qykWDloI7Rew2b1g/formResponse",
            name: "entry.511676966",
            score: "entry.1008291282",
            level: "entry.1332224844"
          };
        }
      
        if (currentPage.includes("cognitive_skills/")) {
          return {
            formURL: "https://docs.google.com/forms/d/e/1FAIpQLSeco-wWwULNG0-L1Qwnxn4tYBtQxinBXjVg4jTB1C2HzZ2KNw/formResponse",
            name: "entry.511676966",
            score: "entry.1008291282",
            level: "entry.1332224844"
          };
        }
      
        return null;
      };
       
         




    console.log("üîπ –û—Å—Ç–∞–Ω–Ω—è —Å–ø—Ä–æ–±–∞:", lastAttemptDate);
    console.log("‚úÖ –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–æ–¥–∞–Ω–æ –¥–æ `send-results-btn`.");
    










window.submitResults = function(finalScore, level, entryIDs, cleanedStudentName) {console.log("üì® submitResults() –∑–∞–ø—É—â–µ–Ω–æ!");

    if (window.isSubmitting) return;
    window.isSubmitting = true;

    console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—è submitResults –≤–∏–∫–ª–∏–∫–∞–Ω–∞!");
    
    if (!entryIDs || !entryIDs.formURL) {
        console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏.");
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞! –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID.");
        window.isSubmitting = false;
        return;
    }

    console.log("üîπ –û—Ç—Ä–∏–º–∞–Ω—ñ entry IDs:", entryIDs);

    const formData = new URLSearchParams();
    formData.append(entryIDs.name, cleanedStudentName);
    formData.append(entryIDs.score, Number(finalScore));
    formData.append(entryIDs.level, String(level));
console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", Object.fromEntries(formData));
    console.log("üì© –§–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", formData.toString());

// fetch(entryIDs.formURL, {
//     method: "POST",
//     headers: { "Content-Type": "application/x-www-form-urlencoded" },
//     body: formData
// })
// .then(response => response.text()) // ‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å Google Forms
// .then(text => console.log("üîπ –í—ñ–¥–ø–æ–≤—ñ–¥—å Google Forms:", text)) // üîé –î—Ä—É–∫—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
// .catch(error => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", error));

    fetch(entryIDs.formURL, {
        method: "POST",
        mode: "no-cors", // –ó–∞–ø–æ–±—ñ–≥–∞—î CORS-–±–ª–æ–∫—É–≤–∞–Ω–Ω—é
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: formData
    })
    .then(() => {
        console.log("‚úÖ –£—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
        alert("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ —É Google Forms!");
        document.getElementById("send-results-btn").style.display = "none";
    })
    .catch(error => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", error);
        alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    })
    .finally(() => {
        window.isSubmitting = false;
    });
};//‚úÖ –í–∏–∫–ª–∏–∫ submitResults
// üè´üßíüìõ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Ç—É —ñ–º–µ–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç–∞
window.askStudentName = function () {
    let studentName = prompt("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è:").trim();

    if (!studentName || studentName.length < 2) {
        alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —ñ–º'—è.");
        return null;  // ‚ùå –Ø–∫—â–æ —ñ–º'—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ null
    }

    // ‚úÖ –§—ñ–ª—å—Ç—Ä —Å–∏–º–≤–æ–ª—ñ–≤ —É —ñ–º–µ–Ω—ñ
    let cleanedStudentName = studentName.replace(/[^a-zA-Z–ê-–Ø–∞-—è–á—ó–Ü—ñ–Ñ—î“ê“ë0-9' ]/g, "");

    return cleanedStudentName;  // ‚úÖ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—á–∏—â–µ–Ω–µ —ñ–º'—è
};// üè´üßíüìõ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Ç—É —ñ–º–µ–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç–∞

sendResultsBtn.addEventListener("click", () => {
    console.log("–í–∏–∫–ª–∏–∫ submitResults");
    const currentPage = window.location.pathname;
    let finalScore;
    

    // üï∏üìÑ –í–∏–∑–Ω–∞—á–∞—î–º–æ, —è–∫–∏–π —Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω–æ
    if (currentPage.includes("matrytsya_ravena.html")) {


         // ‚úÖ –ó–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫–æ–º –±–∞–ª—ñ–≤
  let sendStudentName = askStudentName();
if (!sendStudentName) {
    console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
    return;
}
console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);
 finalScore = calculateScore();
        const level = calculateLevelRaven(finalScore);
    } 
else if (currentPage.includes("upiznay_fihury.html")) {
 // ‚úÖ –ó–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫–æ–º –±–∞–ª—ñ–≤
 let sendStudentName = askStudentName();
if (!sendStudentName) {
    console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
    return;
}
console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);

        finalScore = window.finalScoreFigures;
        const level = window.finalLevelFigures;
    } 
else if (currentPage.includes("cognitive_skills/")) {
                        const checkResults = checkAllAnsweredMotivation();
console.log("‚úÖ –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ...");
                    // ‚úÖ –Ø–∫—â–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è - –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å
    /* if (totalQuestions.size !== answeredQuestions.size) {
        alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è–º!");
        return;
    } */
 let totalQuestions, answeredQuestions;
if (checkResults.totalQuestions.size === checkResults.answeredQuestions.size) {
    console.log("üîπ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∏—Ç–∞–Ω—å:", checkResults.totalQuestions.size);
    console.log("üîπ –í—ñ–¥–ø–æ–≤—ñ–¥—ñ:", checkResults.answeredQuestions.size);        // –í–∏–∫–æ–Ω—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
 // ‚úÖ –ó–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è –ø–µ—Ä–µ–¥ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫–æ–º –±–∞–ª—ñ–≤
let sendStudentName = askStudentName();
if (!sendStudentName) {
    console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
    return;
}
console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);

        // ‚úÖ –¢—ñ–ª—å–∫–∏ —Ç–µ–ø–µ—Ä –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ –±–∞–ª–∏
                const finalScore = getLevel();console.log("üîπ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", finalScore); // –î–æ–¥–∞–Ω–æ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏

                const level = getLevel(finalScore);
         // ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–µ—Å—Ç—É —Ç–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏

    // if (currentPage.includes("cognitive_skills/")) {} 
    // ‚ùó –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–º–∏–ª—Ü—ñ, —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω—É–ª–∞ null –∞–±–æ undefined
    if (!checkResults || !checkResults.totalQuestions || !checkResults.answeredQuestions) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: `checkResults` –ø–æ–≤–µ—Ä–Ω—É–≤ `undefined` –∞–±–æ `null`.");return;
    }
    // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏({ totalQuestions, answeredQuestions } = checkResults);
    const { totalQuestions, answeredQuestions, score } = checkAllAnsweredMotivation();
console.log("üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ totalQuestions —Ç–∞ answeredQuestions", totalQuestions, answeredQuestions);
console.log("‚úÖ –ö–æ–¥ –¥–æ—Ö–æ–¥–∏—Ç—å —Å—é–¥–∏! –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ...");

                console.log("‚úÖ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", { score: finalScore, level });

        
                if (typeof checkAllAnsweredMotivation === "function") {
                    checkResults = checkAllAnsweredMotivation();
                } else {
                    console.error("‚ùå –§—É–Ω–∫—Ü—ñ—è checkAllAnsweredMotivation –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!");
                    return;
                }
             console.log("‚úÖ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", finalScore);
             console.log("‚úÖ –í–∏–∑–Ω–∞—á–µ–Ω–∏–π —Ä—ñ–≤–µ–Ω—å:", level);
                // –í–∏–∫–ª–∏–∫–∞—î–º–æ submitResults –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
              if (!cleanedStudentName) {
    console.error("‚ùå cleanedStudentName –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
    return;
}
console.log("‚úÖ cleanedStudentName —ñ—Å–Ω—É—î:", cleanedStudentName);
     console.log("üöÄ –ì–æ—Ç—É—î–º–æ—Å—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏ submitResults...");
console.log("üìù –î–∞–Ω–Ω—ñ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", {
    finalScore,
    level,
    studentName: cleanedStudentName
});
   if (typeof finalScore === "undefined" || typeof level === "undefined") {
    console.error("‚ùå finalScore –∞–±–æ level –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
    return;
}

 submitResults(finalScore, level, getEntryIDs());
                }
                else  {
                    alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è–º!");
                    return;
                }        
    } else {
        console.error("‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞! –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ.");
        return;
    }
// const level = getLevel(score);

    console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", { score, level });

    // ‚úÖ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    submitResults(finalScore, level, getEntryIDs(), cleanedStudentName);
console.log("üîπ –ü–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", {
    studentName: cleanedStudentName,
    score: score, // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç—É—Ç —î —á–∏—Å–ª–æ
    level: level, // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ —î —Ä—ñ–≤–µ–Ω—å
});//console.log
});//sendResultsBtn click                









   // ‚úÖ –§—É–Ω–∫—Ü—ñ—ó –æ–±–º–µ–∂–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—É (–Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ)
   function getLastAttemptKey() {
    const currentPage = window.location.pathname;
    if (currentPage.includes("cognitive_skills/")) return "lastAttemptMotivation";
    if (currentPage.includes("matrytsya_ravena.html")) return "lastAttemptRaven";
    if (currentPage.includes("upiznay_fihury.html")) return "lastAttemptFigures";
    return "lastAttemptDefault";
}

function isAllowedToRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return daysPassed >= 21; // –ß–µ—Ä–µ–∑ 3 —Ç–∏–∂–Ω—ñ
}

function daysUntilRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return Math.ceil(21 - daysPassed);
}








    if (lastAttempt && !isAllowedToRetry(new Date(lastAttempt))) {
        resultEl.innerHTML = `‚ùå –í–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç. –ú–æ–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${daysUntilRetry(new Date(lastAttempt))} –¥–Ω—ñ–≤.`;
        sendResultsBtn.disabled = true;
        return;
    }

});
