// –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó getLastAttemptKey
function getLastAttemptKey() {
    return "lastAttemptMotivation";
}

// ‚úÖ –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–±–º–µ–∂–µ–Ω—å 
function checkTestRetry(retryElement) {
    const lastAttemptKey = getLastAttemptKey();
    const lastAttempt = localStorage.getItem(lastAttemptKey);
    const lastAttemptDate = lastAttempt ? new Date(lastAttempt) : null;

    console.log("lastAttempt:", lastAttempt); // –õ–æ–≥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    console.log("lastAttemptDate:", lastAttemptDate); // –õ–æ–≥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–∞—Ç–∏

    if (lastAttemptDate && !isAllowedToRetry(lastAttemptDate)) {
        retryElement.innerHTML = `‚ùå –í–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç. –ú–æ–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${daysUntilRetry(lastAttemptDate)} –¥–Ω—ñ–≤.`;
        return false;
    }

    return true;
}

function isAllowedToRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return daysPassed >= 21; // –ß–µ—Ä–µ–∑ 3 —Ç–∏–∂–Ω—ñ
}

function daysUntilRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return Math.ceil(21 - daysPassed);
}

document.addEventListener("DOMContentLoaded", () => {
    const main = document.querySelector("main");
    window.resultElMotivation = document.getElementById("result-motivation");
    const sendResultsBtnMotivation = document.getElementById("send-results-motivation-btn");

    // –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–±–º–µ–∂–µ–Ω—å
    if (!checkTestRetry(main)) {
        console.log("‚ùå –í–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç. –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ.");
        return; // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–¥–∞–ª—å—à–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, —è–∫—â–æ —Ç–µ—Å—Ç –≤–∂–µ –±—É–≤ –ø—Ä–æ–π–¥–µ–Ω–∏–π
    }

    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –∫–Ω–æ–ø–∫–∏ "send-results"
    sendResultsBtnMotivation.addEventListener("click", () => {
        let checkResults = checkAllAnsweredMotivation();
        console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—ñ ", checkResults.answeredQuestions);
        console.log("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ checkResults:", checkResults);
        console.log("üîç answeredQuestions:", checkResults.answeredQuestions);
        console.log("üîç totalQuestions:", checkResults.totalQuestions);

        if (checkResults.answeredQuestions === checkResults.totalQuestions) {
            console.log("üöÄ –í–∏–∫–ª–∏–∫ submitResults()");
            submitResults(checkResults.score); // ‚úÖ –í–∏–∫–ª–∏–∫–∞—î–º–æ submitResults
        } else {
            alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –≤—Å—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è–º!");
            console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—ñ ", answeredQuestions);
            return;
        }
    });
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ç–∞ –¥–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–ø—Ä–æ–±–∏
window.submitResults = function(finalScore, level, entryIDs, sendStudentName) {
    console.log("üì® submitResults() –∑–∞–ø—É—â–µ–Ω–æ!");
    entryIDs = getEntryIDs();

    if (!entryIDs) {
        console.error(`‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ç–µ—Å—Ç—É`);
        return;
    }
    if (window.isSubmitting) return;
    window.isSubmitting = true;

    console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—è submitResults –≤–∏–∫–ª–∏–∫–∞–Ω–∞!");   

    if (!entryIDs || !entryIDs.formURL) {
        console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏.");
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞! –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID.");
        window.isSubmitting = false;
        return;
    }

    let selectedEntryIDs = entryIDs; // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
    sendStudentName = askStudentName();
    console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);
    finalScore = 0;
    level = "";

    if (!sendStudentName) {
        console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
        return;
    }
    console.log("üîç –í–∏–∫–ª–∏–∫–∞—î–º–æ calculateScoreMotivation...");
    finalScore = calculateScoreMotivation();
    console.log("‚úÖ finalScore –ø—ñ—Å–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É:", finalScore);

    level = getLevelMotivation(finalScore);
    console.log("‚úÖ –í–∏–∑–Ω–∞—á–µ–Ω–∏–π —Ä—ñ–≤–µ–Ω—å:", level);

    const formData = new URLSearchParams();
    formData.append(entryIDs.name, sendStudentName);
    formData.append(entryIDs.score, Number(finalScore));
    formData.append(entryIDs.level, String(level));

    console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", Object.fromEntries(formData));
    console.log("üì© –§–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", formData.toString());

    fetch(entryIDs.formURL, {
        method: "POST",
        mode: "no-cors", 
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: formData
    })
    .then(() => {
        console.log("‚úÖ –£—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
        alert("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ —É Google Forms!");
        sendResultsBtnMotivation.style.display = "none";
        resultElMotivation.innerHTML = `<strong>–î—è–∫—É—î–º–æ –∑–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ!</strong>`;

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞—Ç—É –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–ø—Ä–æ–±–∏ –≤ localStorage
        localStorage.setItem(getLastAttemptKey(), new Date().toISOString());
    })
    .catch(error => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", error);
        alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    })
    .finally(() => {
        window.isSubmitting = false;
    });
};
