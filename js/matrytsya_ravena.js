document.addEventListener("DOMContentLoaded", () => {
window.resultEl = document.getElementById("result");    // const lastAttemptKey = getLastAttemptKey(); // ‚úÖ –û—Ç—Ä–∏–º—É—î–º–æ –∫–ª—é—á –¥–ª—è LocalStorage
    // const lastAttempt = localStorage.getItem(lastAttemptKey); // ‚úÖ –û–≥–æ–ª–æ—à—É—î–º–æ lastAttempt
    // const lastAttemptDate = lastAttempt ? new Date(lastAttempt) : null;
   const startBtn = document.getElementById("start-btn");
const sendResultsBtnRaven = document.getElementById("send-results-raven-btn");
 const taskContainer = document.getElementById("task-container");
  const timerEl = document.getElementById("timer");
  let currentTaskIndex = 0;
  let score = 0;//  let score;
  let timerInterval;
      window.calculateLevel = function(score) {
    if (score === 10) return "–î—É–∂–µ –≤–∏—Å–æ–∫–∏–π";
    if (score >= 8) return "–í–∏—Å–æ–∫–∏–π";
    if (score >= 4) return "–°–µ—Ä–µ–¥–Ω—ñ–π";
    if (score >= 2) return "–ù–∏–∑—å–∫–∏–π";
    return "–î—É–∂–µ –Ω–∏–∑—å–∫–∏–π";
};
  const tasks = [
    { image: "img/matrytsya_ravena/matrytsya_ravena1.jpg", correct: 7 },
    { image: "img/matrytsya_ravena/matrytsya_ravena2.jpg", correct: 6 },
    { image: "img/matrytsya_ravena/matrytsya_ravena3.jpg", correct: 6 },
    { image: "img/matrytsya_ravena/matrytsya_ravena4.jpg", correct: 1 },
    { image: "img/matrytsya_ravena/matrytsya_ravena5.jpg", correct: 2 },
    { image: "img/matrytsya_ravena/matrytsya_ravena6.jpg", correct: 5 },
    { image: "img/matrytsya_ravena/matrytsya_ravena7.jpg", correct: 6 },
    { image: "img/matrytsya_ravena/matrytsya_ravena8.jpg", correct: 1 },
    { image: "img/matrytsya_ravena/matrytsya_ravena9.jpg", correct: 3 },
    { image: "img/matrytsya_ravena/matrytsya_ravena10.jpg", correct: 5 }
  ];

  // ‚úÖ –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –ü–Ü–°–õ–Ø –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó
  startBtn.addEventListener("click", startTest);

  function startTest() {
    console.log("üîπ startTest() –∑–∞–ø—É—â–µ–Ω–æ!");
    currentTaskIndex = 0;
    score = 0;
    taskContainer.style.display = "flex";
    startBtn.style.display = "none";
    sendResultsBtnRaven.style.display = "none";
    startTimer(600);
    loadTask();
  }

  function startTimer(duration) {
    let timeLeft = duration;

    timerInterval = setInterval(() => {
      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;
      timerEl.textContent = `‚è≥ ${minutes}:${seconds < 10 ? "0" : ""}${seconds}`;
      timeLeft--;

      if (timeLeft < 0) {
        clearInterval(timerInterval);
        finishTest();
      }
    }, 1000);
  }

  function loadTask() {
    const task = tasks[currentTaskIndex];

    taskContainer.innerHTML = `
      <img src="${task.image}" class="main-image">
      <div class="next-div">
        <button id="next-btn">–î–∞–ª—ñ</button>
        <ol class="radio-options">
          ${[1, 2, 3, 4, 5, 6, 7, 8].map(num => `
            <li>
              <input type="radio" name="task" id="option-${num}" value="${num}">
              <label for="option-${num}">${num}</label>
            </li>
          `).join('')}
        </ol>
      </div>
    `;

    document.getElementById("next-btn").addEventListener("click", checkAnswer);
  }
//‚úÖ checkAnswer
  function checkAnswer() {
    const selectedOption = document.querySelector('input[name="task"]:checked');
    if (!selectedOption) {
      alert("–û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è.");
      return;
    }

    const userAnswer = parseInt(selectedOption.value);
    if (userAnswer === tasks[currentTaskIndex].correct) {
      score++;
    }

    currentTaskIndex++;
    if (currentTaskIndex < tasks.length) {
      loadTask();
    } else {
      finishTest();
    }
  }//‚úÖ checkAnswer
window.calculateLevelRaven = function () {
    let score = 0;
    const answers = document.querySelectorAll('input[type="radio"]:checked');

    answers.forEach((input) => {
        if (input.value === "1") score++; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –º–∞—é—Ç—å value="1"
    });

    console.log("‚úÖ –ü—ñ–¥—Ä–∞—Ö–æ–≤–∞–Ω–∏–π –±–∞–ª:", score);
    return score;
};

 //üèÅfinishTest
  function finishTest() {
    clearInterval(timerInterval);
    window.resultEl.innerHTML = "üõë –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç'.";
    taskContainer.innerHTML = "";
    sendResultsBtn.style.display = "block";
  }//üèÅfinishTest 
});



// üè´üßíüìõ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Ç—É —ñ–º–µ–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç–∞
window.askStudentName = function () {
    let studentName = prompt("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—ñ —ñ–º'—è —Ç–∞ –ø–µ—Ä—à—É –ª—ñ—Ç–µ—Ä—É –ø—Ä—ñ–∑–≤–∏—â–∞:").trim();

    if (!studentName || studentName.length < 2) {
        alert("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è, –±—ñ–ª—å—à–µ –∑–∞ 1 —Å–∏–º–≤–æ–ª.");
        return null;  // ‚ùå –Ø–∫—â–æ —ñ–º'—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ null
    }

    // ‚úÖ –§—ñ–ª—å—Ç—Ä —Å–∏–º–≤–æ–ª—ñ–≤ —É —ñ–º–µ–Ω—ñ
    let cleanedStudentName = studentName.replace(/[^a-zA-Z–ê-–Ø–∞-—è–á—ó–Ü—ñ–Ñ—î“ê“ë0-9' ]/g, "");

    return cleanedStudentName;  // ‚úÖ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—á–∏—â–µ–Ω–µ —ñ–º'—è
};// üè´üßíüìõ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Ç—É —ñ–º–µ–Ω—ñ —Å—Ç—É–¥–µ–Ω—Ç–∞

  
window.getEntryIDs = function () {
    
 
        
        return {
            formURL: "https://docs.google.com/forms/u/0/d/e/1FAIpQLSfyylO6_4cpbzuD6THcT95VMAW5R7Foy1qykWDloI7Rew2b1g/formResponse",
            name: "entry.511676966",
            score: "entry.1008291282",
            level: "entry.1332224844"
        }
      
        return null;

  };//getEntryIDs




   if (startBtn) {
        startBtn.addEventListener("click", () => {
            console.log("‚úÖ –ü–æ—á–∞—Ç–æ–∫ —Ç–µ—Å—Ç—É: –ú–∞—Ç—Ä–∏—Ü—è –†–∞–≤–µ–Ω–∞");
            startTest();
        });
    } else {
        console.error("‚ùå start-btn –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
    }



window.submitResults = function(finalScore, level, entryIDs, sendStudentName) {
    console.log("üì® submitResults() –∑–∞–ø—É—â–µ–Ω–æ!");
   entryIDs = getEntryIDs();// let 
 if (!entryIDs) {
        console.error(`‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ç–µ—Å—Ç—É: ${testType}`);
        return;
    }   // let selectedEntryIDs = entryIDs ? entryIDs[testType] : null;

    if (window.isSubmitting) return;
    window.isSubmitting = true;

    console.log("‚úÖ –§—É–Ω–∫—Ü—ñ—è submitResults –≤–∏–∫–ª–∏–∫–∞–Ω–∞!");   

    if (!entryIDs || !entryIDs.formURL) {
        console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID –¥–ª—è —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏.");
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞! –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ entry ID.");
        window.isSubmitting = false;
        return;
    }

    console.log("üîπ –û—Ç—Ä–∏–º–∞–Ω—ñ entry IDs:", entryIDs);
console.log("‚úÖ –í–∏–∑–Ω–∞—á–µ–Ω—ñ entry IDs:", entryIDs);
    let selectedEntryIDs = entryIDs; // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è

 //   finalScore = 0;
//    level = "";
       let finalScore = calculateScoreRaven();
       let  level = calculateLevel(finalScore);
    sendStudentName = askStudentName();
    console.log("‚úÖ –Ü–º'—è —Å—Ç—É–¥–µ–Ω—Ç–∞:", sendStudentName);
    console.log("‚úÖ –í–∏–∑–Ω–∞—á–µ–Ω—ñ entry IDs:", selectedEntryIDs);
    console.log("‚úÖ –û–±—á–∏—Å–ª–µ–Ω–∏–π –±–∞–ª:", finalScore);
    console.log("‚úÖ –í–∏–∑–Ω–∞—á–µ–Ω–∏–π —Ä—ñ–≤–µ–Ω—å:", level);

    // ‚úÖ –í–∏–∫–ª–∏–∫–∞—î–º–æ submitResults
   //  submitResults(selectedEntryIDs, finalScore, level, sendStudentName);
    if (!sendStudentName) {
        console.error("‚ùå askStudentName() –ø–æ–≤–µ—Ä–Ω—É–ª–∞ `null`. –í–∏–∫–æ–Ω–∞–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ.");
        return;
if (isNaN(finalScore) || !level) { 

        console.error("‚ùå finalScore –∞–±–æ level –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ!");
        return;
    }
    }
    
    const formData = new URLSearchParams();
    formData.append(entryIDs.name, sendStudentName);
    formData.append(entryIDs.score, Number(finalScore));
    formData.append(entryIDs.level, String(level));

    console.log("üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ:", Object.fromEntries(formData));
    console.log("üì© –§–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:", formData.toString());

    fetch(entryIDs.formURL, {
        method: "POST",
        mode: "no-cors", 
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: formData
    })
    .then(() => {
        console.log("‚úÖ –£—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
        alert("‚úÖ –î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ —É Google Forms!");
    })
    .catch(error => {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è:", error);
        alert("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    })
    .finally(() => {
        window.isSubmitting = false;
    });
};// ‚úÖ –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —É Google Forms



    sendResultsBtn.addEventListener("click", () => submitResults());




   // ‚úÖ –§—É–Ω–∫—Ü—ñ—ó –æ–±–º–µ–∂–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—É (–Ω–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ)

// ‚úÖ –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–±–º–µ–∂–µ–Ω—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–µ—Å—Ç—É
// function checkTestRetry(testType, retryElement) {
//     const lastAttemptKey = `lastAttempt${testType}`;
//     const lastAttempt = localStorage.getItem(lastAttemptKey);
//     const lastAttemptDate = lastAttempt ? new Date(lastAttempt) : null;

//     if (lastAttemptDate && !isAllowedToRetry(lastAttemptDate)) {
	

//         retryElement.innerHTML = `‚ùå –í–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç. –ú–æ–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${daysUntilRetry(lastAttemptDate)} –¥–Ω—ñ–≤.`;
//         return false;
//     }

//     return true;
// }

// ‚úÖ –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–µ—Å—Ç—ñ–≤
// document.addEventListener("DOMContentLoaded", () => {
//     document.getElementById("figures-title").addEventListener("click", () => {
//         checkTestRetry("Figures", document.getElementById("figures-panel"));
//     });

//     document.getElementById("raven-title").addEventListener("click", () => {
//         checkTestRetry("Raven", document.getElementById("raven-panel"));
//     });

//     document.getElementById("motivation-title").addEventListener("click", () => {
//         checkTestRetry("Motivation", document.getElementById("motivation-panel"));
//     });
// });







//    function getLastAttemptKey() {
//     const currentPage = window.location.pathname;
//     if (currentPage.includes("cognitive_skills/")) return "lastAttemptMotivation";
//     if (currentPage.includes("matrytsya_ravena.html")) return "lastAttemptRaven";
//     if (currentPage.includes("upiznay_fihury.html")) return "lastAttemptFigures";
//     return "lastAttemptDefault";
// }

function isAllowedToRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return daysPassed >= 21; // –ß–µ—Ä–µ–∑ 3 —Ç–∏–∂–Ω—ñ
}

function daysUntilRetry(lastAttemptDate) {
    const now = new Date();
    const daysPassed = (now - lastAttemptDate) / (1000 * 60 * 60 * 24);
    return Math.ceil(21 - daysPassed);
}








    // if (lastAttempt && !isAllowedToRetry(new Date(lastAttempt))) {
    //     resultEl.innerHTML = `‚ùå –í–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç. –ú–æ–∂–Ω–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${daysUntilRetry(new Date(lastAttempt))} –¥–Ω—ñ–≤.`;
    //     sendResultsBtn.disabled = true;
    //     return;
    // }


